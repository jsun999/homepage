<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxing.homepage.mapper.ClientMapper">
  <resultMap id="BaseResultMap" type="com.yuxing.homepage.entity.Client">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="compangy" jdbcType="VARCHAR" property="compangy" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yuxing.homepage.entity.Client">
    <result column="leave_word" jdbcType="LONGVARCHAR" property="leaveWord" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, phone, compangy, creat_time
  </sql>
  <sql id="Blob_Column_List">
    leave_word
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from crm_client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from crm_client
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yuxing.homepage.entity.Client">
    insert into crm_client (id, name, phone, 
      compangy, creat_time, leave_word
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{compangy,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, #{leaveWord,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yuxing.homepage.entity.Client">
    insert into crm_client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="compangy != null">
        compangy,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="leaveWord != null">
        leave_word,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="compangy != null">
        #{compangy,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveWord != null">
        #{leaveWord,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuxing.homepage.entity.Client">
    update crm_client
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="compangy != null">
        compangy = #{compangy,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveWord != null">
        leave_word = #{leaveWord,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yuxing.homepage.entity.Client">
    update crm_client
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      compangy = #{compangy,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      leave_word = #{leaveWord,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuxing.homepage.entity.Client">
    update crm_client
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      compangy = #{compangy,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>